axis(1,at=seq(-6,6,by=1))
# add text
text(0.85,36.7,label=df[,1][31],cex=0.6);text(0.75,35.4,label=df[,1][30],cex=0.6)
text(0.75,34.1,label=df[,1][29],cex=0.6);text(0.85,33.0,label=df[,1][28],cex=0.6)
text(0.75,31.8,label=df[,1][27],cex=0.6);text(0.6,30.6,label=df[,1][26],cex=0.6)
text(0.8,29.5,label=df[,1][25],cex=0.6);text(0.85,28.3,label=df[,1][24],cex=0.6)
text(0.45,27.1,label=df[,1][23],cex=0.6);text(0.4,25.9,label=df[,1][22],cex=0.6)
text(0.55,24.7,label=df[,1][21],cex=0.6);text(0.55,23.5,label=df[,1][20],cex=0.6)
text(0.85,22.3,label=df[,1][19],cex=0.6);text(-0.75,21.1,label=df[,1][18],cex=0.6)
text(-1,19.9,label=df[,1][17],cex=0.6);text(-1,18.8,label=df[,1][16],cex=0.6)
text(-0.85,17.6,label=df[,1][15],cex=0.6);text(-0.85,16.3,label=df[,1][14],cex=0.6)
text(-0.7,15.1,label=df[,1][13],cex=0.6);text(-0.65,13.9,label=df[,1][12],cex=0.6)
text(-0.85,12.7,label=df[,1][11],cex=0.6);text(-1.05,11.5,label=df[,1][10],cex=0.6)
text(-0.85,10.3,label=df[,1][9],cex=0.6);text(-0.85,9.1,label=df[,1][8],cex=0.6)
text(-0.47,7.9,label=df[,1][7],cex=0.6);text(-0.85,6.7,label=df[,1][6],cex=0.6)
text(-0.49,5.5,label=df[,1][5],cex=0.6);text(-1.44,4.3,label=df[,1][4],cex=0.6)
text(-0.49,3.1,label=df[,1][3],cex=0.6);text(-0.93,1.9,label=df[,1][2],cex=0.6)
text(-0.69,0.7,label=df[,1][1],cex=0.6)
# add lines
segments(0,-1,0,40,lty=3,col="grey")
segments(2,-1,2,40,lty=3,col="grey")
segments(4,-1,4,40,lty=3,col="grey")
segments(6,-1,6,40,lty=3,col="grey")
segments(4,-1,4,40,lty=3,col="grey")
segments(-2,-1,-2,40,lty=3,col="grey")
segments(-4,-1,-4,40,lty=3,col="grey")
segments(-6,-1,-6,40,lty=3,col="grey")
legend("topleft",bty="n",cex=0.65,inset=c(0.01,-0.02),ncol=2,
legend=c("groupA","groupB"),
col=c("forestgreen", "goldenrod"),pch=c(15,15))
tiff(file="lefse.tiff",width=2000,height=2000,res=400)
par(mar=c(5,2,1,1))
barplot(df[,3],horiz=T,xlim=c(-6,6),xlab="LDA score (log 10)",
col=c(rep("forestgreen",length(which(df[,2]=="groupA"))),
rep("goldenrod",length(which(df[,2]=="groupB")))))
axis(1,at=seq(-6,6,by=1))
text(0.85,36.7,label=df[,1][31],cex=0.6);text(0.75,35.4,label=df[,1][30],cex=0.6)
text(0.75,34.1,label=df[,1][29],cex=0.6);text(0.85,33.0,label=df[,1][28],cex=0.6)
text(0.75,31.8,label=df[,1][27],cex=0.6);text(0.6,30.6,label=df[,1][26],cex=0.6)
text(0.8,29.5,label=df[,1][25],cex=0.6);text(0.85,28.3,label=df[,1][24],cex=0.6)
text(0.45,27.1,label=df[,1][23],cex=0.6);text(0.4,25.9,label=df[,1][22],cex=0.6)
text(0.55,24.7,label=df[,1][21],cex=0.6);text(0.55,23.5,label=df[,1][20],cex=0.6)
text(0.85,22.3,label=df[,1][19],cex=0.6);text(-0.75,21.1,label=df[,1][18],cex=0.6)
text(-1,19.9,label=df[,1][17],cex=0.6);text(-1,18.8,label=df[,1][16],cex=0.6)
text(-0.85,17.6,label=df[,1][15],cex=0.6);text(-0.85,16.3,label=df[,1][14],cex=0.6)
text(-0.7,15.1,label=df[,1][13],cex=0.6);text(-0.65,13.9,label=df[,1][12],cex=0.6)
text(-0.85,12.7,label=df[,1][11],cex=0.6);text(-1.05,11.5,label=df[,1][10],cex=0.6)
text(-0.85,10.3,label=df[,1][9],cex=0.6);text(-0.85,9.1,label=df[,1][8],cex=0.6)
text(-0.47,7.9,label=df[,1][7],cex=0.6);text(-0.85,6.7,label=df[,1][6],cex=0.6)
text(-0.49,5.5,label=df[,1][5],cex=0.6);text(-1.44,4.3,label=df[,1][4],cex=0.6)
text(-0.49,3.1,label=df[,1][3],cex=0.6);text(-0.93,1.9,label=df[,1][2],cex=0.6)
segments(0,-1,0,40,lty=3,col="grey")
text(-0.69,0.7,label=df[,1][1],cex=0.6)
segments(2,-1,2,40,lty=3,col="grey")
segments(4,-1,4,40,lty=3,col="grey")
segments(6,-1,6,40,lty=3,col="grey")
segments(4,-1,4,40,lty=3,col="grey")
segments(-2,-1,-2,40,lty=3,col="grey")
segments(-4,-1,-4,40,lty=3,col="grey")
segments(-6,-1,-6,40,lty=3,col="grey")
legend("topleft",bty="n",cex=0.65,inset=c(0.01,-0.02),ncol=2,
legend=c("groupA","groupB"),
col=c("forestgreen", "goldenrod"),pch=c(15,15))
barplot(df[,3],horiz=T,xlim=c(-6,6),xlab="LDA score (log 10)",
col=c(rep("forestgreen",length(which(df[,2]=="groupA"))),
rep("goldenrod",length(which(df[,2]=="groupB")))))
devdf
df
head(df)
ggplot()
library(ggplot2)
ggplot(df, aes(genus, value, colour = class)) +
geom_bar() +
coord_flip()
ggplot(df, aes(genus, value, colour = class)) +
geom_bar(stat = "identity") +
coord_flip()
library(ggplot2)
# my data
df <- data.frame(genus=c("Prevotella","Streptococcus","YRC22","Phascolarctobacterium","SMB53","Epulopiscium",
"CF231","Anaerovibrio","Paludibacter","Parabacteroides","Desulfovibrio","Sutterella",
"Roseburia","Others__0_5_","Akkermansia","Bifidobacterium","Campylobacter","Fibrobacter",
"Coprobacillus","Bulleidia","f_02d06","Dorea","Blautia","Enterococcus","Eubacterium",
"p_75_a5","Clostridium","Coprococcus","Oscillospira","Escherichia","Lactobacillus"),
class=c(rep("groupA",18),rep("groupB",13)),
value=c(4.497311,4.082377,3.578472,3.567310,3.410453,3.390026,
3.363542,3.354532,3.335634,3.284165,3.280838,3.218053,
3.071454,3.026663,3.021749,3.004152,2.917656,2.811455,
-2.997631,-3.074314,-3.117659,-3.151276,-3.170631,-3.194323,
-3.225207,-3.274281,-3.299712,-3.299875,-3.689051,-3.692055,
-4.733154)
)
ggplot(df, aes(genus, value, colour = class)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(df, aes(genus, value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(df, aes(reorder(genus, value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip()
?element_text
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = value,
vjust = ifelse(y >= 0, 0, 1)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = value,
vjust = ifelse(value >= 0, 0, 1)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = value,
vjust = ifelse(value >= 1, 0, 1)))
?geom_text
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_label(aes(label = value,
vjust = ifelse(value >= 0, 0, 1)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = value, label.size = 0.5,
vjust = ifelse(value >= 0, 0, 1)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = value,
vjust = ifelse(value >= 1, 2.5, 0.1)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = value,
vjust = ifelse(value >= 0, 2.5, 0.1)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = value,
vjust = ifelse(value > 0, 2.5, 0.1)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = value,
vjust = ifelse(value > 0, 0.1, -2.5)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = value,
hjust = ifelse(value > 0, 0.1, -2.5)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = value,
hjust = ifelse(value > 0, 0, 1)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = value,
hjust = ifelse(value > 0, -2.5, 0.1)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = value,
hjust = ifelse(value < 1, 0, 0.1)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = value)
)
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
hjust = ifelse(value < 1, 0, 0.1)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
hjust = ifelse(value < 1, 0, 1)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
hjust = ifelse(value < 1, 0, 0.1)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
hjust = ifelse(value < 1, 0, 2)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
# coord_flip() +
geom_text(aes(label = genus,
hjust = ifelse(value < 1, 0, 2)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
hjust = ifelse(value < 1, 0, 2)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
hjust = ifelse(value < 1, 0.5, 2)))
?geom_text
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
nudge_x = ifelse(value < 1, 0.5, 2)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
nudge_y = ifelse(value < 1, 0.5, 2)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
x = ifelse(value < 1, 0.5, 2)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
y = ifelse(value < 1, 0.5, 2)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
y = ifelse(value < 1, 1.5, -2.5)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
y = ifelse(value < 1, 1.5, -2.5),
size = 0.5))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
y = ifelse(value < 1, 1.5, -2.5),
size = 0.1))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
y = ifelse(value < 1, 1.5, -2.5),
size = 0.5))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus, size = 0.5,
y = ifelse(value < 1, 1.5, -2.5)))
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
y = ifelse(value < 1, 1.5, -2.5)), size = 1)
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
y = ifelse(value < 1, 1.5, -2.5)), size = 3)
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
y = ifelse(value < 1, 1.5, -2.5)), size = 2.5)
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
y = ifelse(value < 1, 1.5, -2.5)), size = 2.5) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
y = ifelse(value < 1, 1.5, -2.5)), size = 2.5) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
y = ifelse(value < 1, 1.5, -2.5)), size = 2.5) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
y = ifelse(value < 1, 1.5, -2.5)), size = 2.5) +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
geom_text(aes(label = genus,
y = ifelse(value < 1, 1.5, -1.5)), size = 2.5) +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
library(ggplot2)
# my data
df <- data.frame(genus=c("Prevotella","Streptococcus","YRC22","Phascolarctobacterium","SMB53","Epulopiscium",
"CF231","Anaerovibrio","Paludibacter","Parabacteroides","Desulfovibrio","Sutterella",
"Roseburia","Others__0_5_","Akkermansia","Bifidobacterium","Campylobacter","Fibrobacter",
"Coprobacillus","Bulleidia","f_02d06","Dorea","Blautia","Enterococcus","Eubacterium",
"p_75_a5","Clostridium","Coprococcus","Oscillospira","Escherichia","Lactobacillus"),
class=c(rep("groupA",18),rep("groupB",13)),
value=c(4.497311,4.082377,3.578472,3.567310,3.410453,3.390026,
3.363542,3.354532,3.335634,3.284165,3.280838,3.218053,
3.071454,3.026663,3.021749,3.004152,2.917656,2.811455,
-2.997631,-3.074314,-3.117659,-3.151276,-3.170631,-3.194323,
-3.225207,-3.274281,-3.299712,-3.299875,-3.689051,-3.692055,
-4.733154)
)
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
theme(axis.title.y = element_blank())
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
ylab("Genus")
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
xlab("Genus")
ggplot(df, aes(reorder(genus, -value), value, fill = class)) +
geom_bar(stat = "identity") +
coord_flip() +
xlab("genus")
library(dplyr)
library(mosaic)
set.seed(2016)
movies_genre_sample <- movies_trimmed %>%
group_by(genre) %>%
sample_n(34)
library(ggplot2movies)
(movies_trimmed <- movies %>% select(title, year, rating, Action, Romance))
movies_genre_sample <- movies_trimmed %>%
group_by(genre) %>%
sample_n(34)
movies_trimmed <- movies_trimmed %>%
mutate(genre = ifelse(Action == 1, "Action",
ifelse(Romance == 1, "Romance",
"Neither"))) %>%
filter(genre != "Neither") %>%
select(-Action, -Romance)
movies_genre_sample <- movies_trimmed %>%
group_by(genre) %>%
sample_n(34)
movies_genre_sample
ggplot(data = movies_genre_sample, aes(x = genre, y = rating)) +
geom_boxplot()
ggplot(data = movies_genre_sample, mapping = aes(x = rating)) +
geom_histogram(binwidth = 1, color = "white", fill = "dodgerblue") +
facet_grid(genre ~ .)
summary_ratings %>% kable()
summary_ratings <- movies_genre_sample %>%
group_by(genre) %>%
summarize(mean = mean(rating),
std_dev = sd(rating),
n = n())
summary_ratings %>% kable()
??kable
summary_ratings %>% knitr::kable()
summary_ratings
summary_ratings %>% mutate(SE = std_dev/sqrt(n))
summary_ratings %>% mutate(SE = std_dev/sqrt(n), low = mean - SE*1.96)
summary_ratings %>% mutate(SE = std_dev/sqrt(n), lower = mean - SE*1.96, upper = mean + SE*1.96)
mean_ratings <- movies_genre_sample %>% group_by(genre) %>%
summarize(mean = mean(rating))
obs_diff <- diff(mean_ratings$mean)
obs_diff
mean_ratings
set.seed(2016)
(movies_trimmed <- movies %>% select(title, year, rating, Action, Romance))
movies_trimmed <- movies_trimmed %>%
mutate(genre = ifelse(Action == 1, "Action",
ifelse(Romance == 1, "Romance",
"Neither"))) %>%
filter(genre != "Neither") %>%
select(-Action, -Romance)
movies_genre_sample <- movies_trimmed %>%
group_by(genre) %>%
sample_n(34)
ggplot(data = movies_genre_sample, aes(x = genre, y = rating)) +
geom_boxplot()
ggplot(data = movies_genre_sample, mapping = aes(x = rating)) +
geom_histogram(binwidth = 1, color = "white", fill = "dodgerblue") +
facet_grid(genre ~ .)
summary_ratings <- movies_genre_sample %>%
group_by(genre) %>%
summarize(mean = mean(rating),
std_dev = sd(rating),
n = n())
summary_ratings %>% knitr::kable()
mean_ratings <- movies_genre_sample %>% group_by(genre) %>%
summarize(mean = mean(rating))
obs_diff <- diff(mean_ratings$mean)
obs_diff
library(mosaic)
shuffled_ratings <- movies_trimmed %>%
mutate(rating = shuffle(rating)) %>%
group_by(genre) %>%
summarize(mean = mean(rating))
diff(shuffled_ratings$mean)
set.seed(2016)
many_shuffles <- do(5000) *
(movies_trimmed %>%
mutate(rating = shuffle(rating)) %>%
group_by(genre) %>%
summarize(mean = mean(rating))
)
View(many_shuffles)
rand_distn <- many_shuffles %>%
group_by(.index) %>%
summarize(diffmean = diff(mean))
rand_distn
ggplot(data = rand_distn, aes(x = diffmean)) +
geom_histogram(color = "white", bins = 20)
install.packages("cricketr")
library(cricketr)
?cricketr
data("southee")
southee
pathToFile <- system.file("data", "tendulkar.csv", package = "cricketr")
batsmanAvgRunsGround(pathToFile,"Sachin Tendulkar")
getPlayerData()
?getPlayerData()
getPlayerData
library(XML)
library(XML)
url <- "http://stats.espncricinfo.com/ci/engine/records/batting/most_runs_innings.html?class=1;id=10;type=ground"
table <- readHTMLTable(url)
head(table)
cric.table <- readHTMLTable(paste0(url, "id=", 10, ";type=ground"))
cric.table::
cric.table
cric.table$`High scores`
cric.table$`High scores`[1]
cric.table$`High scores`[,1]
cric.table$`High scores`[1,1]
cric.table$`High scores`
cric.table[1]
cric.table[1][1]
cric.table[1][,1]
cric.table[1][1,]
cric.table[1][[1]]
cric.table[1][[,1]]
cric.table[1][[1,]]
str(cric.table[1])
cric.table[1]$Player
cric.table$`High scores`$Player
cric.table$`High scores`$Player[1]
cric.table$`High scores`$Player[,1]
cric.table$`High scores`$Player[1,]
player.name <- cric.table$`High scores`$Player[1]
player.name <- as.character(cric.table$`High scores`$Player[1])
player.name
score <- as.numeric(cric.table $`High scores`$Runs[1])
sore
score
cric.table $`High scores`
cric.table $`High scores`$Runs
score <- as.character(cric.table $`High scores`$Runs[1])
scoree
score
shiny::runApp('conradProgramming/myApps/hi-risk-intersections-app2')
runApp('conradProgramming/myApps/hi-risk-intersections-app2')
runApp('conradProgramming/myApps/hi-risk-intersections-app2')
runApp('conradProgramming/myApps/hi-risk-intersections-app2')
shiny::runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
runApp('C:/xampp/htdocs/GitHub/shiny-apps/hi-risk-intersections-app2')
